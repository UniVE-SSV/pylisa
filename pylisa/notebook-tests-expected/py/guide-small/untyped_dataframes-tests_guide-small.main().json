{"name":"untyped dataframes-tests/guide-small::main()","description":null,"nodes":[{"id":0,"text":"import pandas as pd"},{"id":1,"subNodes":[2,3],"text":"df = read_csv(pd, 'temporal.csv')"},{"id":2,"text":"df"},{"id":3,"subNodes":[4,5],"text":"read_csv(pd, 'temporal.csv')"},{"id":4,"text":"pd"},{"id":5,"text":"'temporal.csv'"},{"id":6,"subNodes":[7,8],"text":"head(df, 10)"},{"id":7,"text":"df"},{"id":8,"text":"10"},{"id":9,"subNodes":[10,13],"text":"[](df, 'Mes') = to_datetime(pd, [](df, 'Mes'))"},{"id":10,"subNodes":[11,12],"text":"[](df, 'Mes')"},{"id":11,"text":"df"},{"id":12,"text":"'Mes'"},{"id":13,"subNodes":[14,15],"text":"to_datetime(pd, [](df, 'Mes'))"},{"id":14,"text":"pd"},{"id":15,"subNodes":[16,17],"text":"[](df, 'Mes')"},{"id":16,"text":"df"},{"id":17,"text":"'Mes'"},{"id":18,"text":"from geopandas.tools import geopandas.tools as geocode"},{"id":19,"subNodes":[20,21],"text":"df2 = read_csv(pd, 'mapa.csv')"},{"id":20,"text":"df2"},{"id":21,"subNodes":[22,23],"text":"read_csv(pd, 'mapa.csv')"},{"id":22,"text":"pd"},{"id":23,"text":"'mapa.csv'"},{"id":24,"subNodes":[25,26,28],"text":"dropna(df2, axis=(0), inplace=(true))"},{"id":25,"text":"df2"},{"id":26,"subNodes":[27],"text":"axis=(0)"},{"id":27,"text":"0"},{"id":28,"subNodes":[29],"text":"inplace=(true)"},{"id":29,"text":"true"},{"id":30,"subNodes":[31,34],"text":"[](df2, 'geometry') = [](geocode([](df2, 'País'), provider=('nominatim')), 'geometry')"},{"id":31,"subNodes":[32,33],"text":"[](df2, 'geometry')"},{"id":32,"text":"df2"},{"id":33,"text":"'geometry'"},{"id":34,"subNodes":[35,41],"text":"[](geocode([](df2, 'País'), provider=('nominatim')), 'geometry')"},{"id":35,"subNodes":[36,39],"text":"geocode([](df2, 'País'), provider=('nominatim'))"},{"id":36,"subNodes":[37,38],"text":"[](df2, 'País')"},{"id":37,"text":"df2"},{"id":38,"text":"'País'"},{"id":39,"subNodes":[40],"text":"provider=('nominatim')"},{"id":40,"text":"'nominatim'"},{"id":41,"text":"'geometry'"},{"id":42,"subNodes":[43,46],"text":"[](df2, 'Latitude') = apply([](df2, 'geometry'), lambda [l] : l::y)"},{"id":43,"subNodes":[44,45],"text":"[](df2, 'Latitude')"},{"id":44,"text":"df2"},{"id":45,"text":"'Latitude'"},{"id":46,"subNodes":[47,50],"text":"apply([](df2, 'geometry'), lambda [l] : l::y)"},{"id":47,"subNodes":[48,49],"text":"[](df2, 'geometry')"},{"id":48,"text":"df2"},{"id":49,"text":"'geometry'"},{"id":50,"text":"lambda [l] : l::y"},{"id":51,"text":"l"},{"id":52,"subNodes":[53],"text":"l::y"},{"id":53,"text":"l"},{"id":54,"subNodes":[55,58],"text":"[](df2, 'Longitude') = apply([](df2, 'geometry'), lambda [l] : l::x)"},{"id":55,"subNodes":[56,57],"text":"[](df2, 'Longitude')"},{"id":56,"text":"df2"},{"id":57,"text":"'Longitude'"},{"id":58,"subNodes":[59,62],"text":"apply([](df2, 'geometry'), lambda [l] : l::x)"},{"id":59,"subNodes":[60,61],"text":"[](df2, 'geometry')"},{"id":60,"text":"df2"},{"id":61,"text":"'geometry'"},{"id":62,"text":"lambda [l] : l::x"},{"id":63,"text":"l"},{"id":64,"subNodes":[65],"text":"l::x"},{"id":65,"text":"l"},{"id":66,"subNodes":[67,77],"text":"[](df2::loc, <([](df2, \"col2\"), 5), list('cool-col')) = 100"},{"id":67,"subNodes":[68,70,75],"text":"[](df2::loc, <([](df2, \"col2\"), 5), list('cool-col'))"},{"id":68,"subNodes":[69],"text":"df2::loc"},{"id":69,"text":"df2"},{"id":70,"subNodes":[71,74],"text":"<([](df2, \"col2\"), 5)"},{"id":71,"subNodes":[72,73],"text":"[](df2, \"col2\")"},{"id":72,"text":"df2"},{"id":73,"text":"\"col2\""},{"id":74,"text":"5"},{"id":75,"subNodes":[76],"text":"list('cool-col')"},{"id":76,"text":"'cool-col'"},{"id":77,"text":"100"},{"id":78,"subNodes":[79,80],"text":"df3 = concat(pd, list(df, df2))"},{"id":79,"text":"df3"},{"id":80,"subNodes":[81,82],"text":"concat(pd, list(df, df2))"},{"id":81,"text":"pd"},{"id":82,"subNodes":[83,84],"text":"list(df, df2)"},{"id":83,"text":"df"},{"id":84,"text":"df2"},{"id":85,"subNodes":[86,87],"text":"df4 = join(df, df2)"},{"id":86,"text":"df4"},{"id":87,"subNodes":[88,89],"text":"join(df, df2)"},{"id":88,"text":"df"},{"id":89,"text":"df2"},{"id":90,"subNodes":[91,92],"text":"df5 = concat(pd, list([](df, 'bar'), [](df, 'foo')))"},{"id":91,"text":"df5"},{"id":92,"subNodes":[93,94],"text":"concat(pd, list([](df, 'bar'), [](df, 'foo')))"},{"id":93,"text":"pd"},{"id":94,"subNodes":[95,98],"text":"list([](df, 'bar'), [](df, 'foo'))"},{"id":95,"subNodes":[96,97],"text":"[](df, 'bar')"},{"id":96,"text":"df"},{"id":97,"text":"'bar'"},{"id":98,"subNodes":[99,100],"text":"[](df, 'foo')"},{"id":99,"text":"df"},{"id":100,"text":"'foo'"},{"id":101,"text":"ret"}],"edges":[{"sourceId":0,"destId":1,"kind":"SequentialEdge"},{"sourceId":1,"destId":6,"kind":"SequentialEdge"},{"sourceId":6,"destId":9,"kind":"SequentialEdge"},{"sourceId":9,"destId":18,"kind":"SequentialEdge"},{"sourceId":18,"destId":19,"kind":"SequentialEdge"},{"sourceId":19,"destId":24,"kind":"SequentialEdge"},{"sourceId":24,"destId":30,"kind":"SequentialEdge"},{"sourceId":30,"destId":42,"kind":"SequentialEdge"},{"sourceId":42,"destId":54,"kind":"SequentialEdge"},{"sourceId":54,"destId":66,"kind":"SequentialEdge"},{"sourceId":66,"destId":78,"kind":"SequentialEdge"},{"sourceId":78,"destId":85,"kind":"SequentialEdge"},{"sourceId":85,"destId":90,"kind":"SequentialEdge"},{"sourceId":90,"destId":101,"kind":"SequentialEdge"}],"descriptions":[{"nodeId":0,"description":{"expressions":["skip"],"state":{"heap":"#TOP#","type":"#TOP#","value":{"constants":"#TOP#","graph":"#TOP#","operations":"#TOP#","pointers":"#TOP#"}}}},{"nodeId":1,"description":{"expressions":["df"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]"},"type":{"map":{"df":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node1"]}}}}},{"nodeId":2,"description":{"expressions":["df"],"state":{"heap":"#TOP#","type":{"map":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"]},"stack":"#TOP#"},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node1"]}}}}},{"nodeId":3,"description":{"expressions":["ref$new pandas.DataFrame"],"state":{"heap":"#TOP#","type":{"map":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node1"]}}}}},{"nodeId":4,"description":{"expressions":["pd"],"state":{"heap":"#TOP#","type":"#TOP#","value":{"constants":"#TOP#","graph":"#TOP#","operations":"#TOP#","pointers":"_|_"}}}},{"nodeId":5,"description":{"expressions":["'temporal.csv'"],"state":{"heap":"#TOP#","type":"#TOP#","value":{"constants":"#TOP#","graph":"#TOP#","operations":"#TOP#","pointers":"_|_"}}}},{"nodeId":6,"description":{"expressions":["ref$heap[s]:pp@'dataframes-tests/guide-small.py':3:10"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]"},"type":{"map":{"df":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: []\nproject:[[0, 0]:[10, 10]:]: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node4"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"]}}}}},{"nodeId":7,"description":{"expressions":["df"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]"},"type":{"map":{"df":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node1"]}}}}},{"nodeId":8,"description":{"expressions":["10"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]"},"type":{"map":{"df":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"]},"stack":["int32"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node1"]}}}}},{"nodeId":9,"description":{"expressions":["*(df)->'Mes'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]"},"type":{"map":{"df":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"]},"stack":["pandas.Series*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"]}}}}},{"nodeId":10,"description":{"expressions":["*(df)->'Mes'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]"},"type":{"map":{"df":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"]},"stack":["pandas.Series*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: []\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nTO_DATETIME(['Mes']): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node10"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"]}}}}},{"nodeId":11,"description":{"expressions":["df"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]"},"type":{"map":{"df":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> TO_DATETIME(['Mes'])]\nTO_DATETIME(['Mes']): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node6"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"]}}}}},{"nodeId":12,"description":{"expressions":["'Mes'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]"},"type":{"map":{"df":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"]},"stack":["string"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> TO_DATETIME(['Mes'])]\nTO_DATETIME(['Mes']): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node6"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"]}}}}},{"nodeId":13,"description":{"expressions":["ref$heap[s]:pp@'dataframes-tests/guide-small.py':4:36"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]"},"type":{"map":{"df":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> TO_DATETIME(['Mes'])]\nTO_DATETIME(['Mes']): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node6"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"]}}}}},{"nodeId":14,"description":{"expressions":["pd"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]"},"type":{"map":{"df":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"]},"stack":"#TOP#"},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: []\nproject:[[0, 0]:[10, 10]:]: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node4"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"]}}}}},{"nodeId":15,"description":{"expressions":["*(df)->'Mes'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]"},"type":{"map":{"df":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"]},"stack":["pandas.Series*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node6"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"]}}}}},{"nodeId":16,"description":{"expressions":["df"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]"},"type":{"map":{"df":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: []\nproject:[[0, 0]:[10, 10]:]: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node4"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"]}}}}},{"nodeId":17,"description":{"expressions":["'Mes'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]"},"type":{"map":{"df":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"]},"stack":["string"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: []\nproject:[[0, 0]:[10, 10]:]: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node4"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"]}}}}},{"nodeId":18,"description":{"expressions":["skip"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]"},"type":{"map":{"df":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"]},"stack":"_|_"},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"]}}}}},{"nodeId":19,"description":{"expressions":["df2"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node13"]}}}}},{"nodeId":20,"description":{"expressions":["df2"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]"},"type":{"map":{"df":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"]},"stack":"#TOP#"},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node13"]}}}}},{"nodeId":21,"description":{"expressions":["ref$new pandas.DataFrame"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]"},"type":{"map":{"df":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node13"]}}}}},{"nodeId":22,"description":{"expressions":["pd"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]"},"type":{"map":{"df":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"]},"stack":"#TOP#"},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"]}}}}},{"nodeId":23,"description":{"expressions":["'mapa.csv'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]"},"type":{"map":{"df":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"]},"stack":["string"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"]}}}}},{"nodeId":24,"description":{"expressions":["df2"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node14"]}}}}},{"nodeId":25,"description":{"expressions":["df2"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node13"]}}}}},{"nodeId":26,"description":{"expressions":["0"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"]},"stack":["int32"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node13"]}}}}},{"nodeId":27,"description":{"expressions":["0"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"]},"stack":["int32"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node13"]}}}}},{"nodeId":28,"description":{"expressions":["true"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"]},"stack":["bool"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node13"]}}}}},{"nodeId":29,"description":{"expressions":["true"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"]},"stack":["bool"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node13"]}}}}},{"nodeId":30,"description":{"expressions":["*(df2)->'geometry'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"]},"stack":["pandas.Series*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: []\nproject:['geometry']: [-A-> assign_to:['geometry']]","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node21"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"]}}}}},{"nodeId":31,"description":{"expressions":["*(df2)->'geometry'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"]},"stack":["pandas.Series*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: []\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> access:['geometry']]\naccess:['geometry']: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["access:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node20"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"]}}}}},{"nodeId":32,"description":{"expressions":["df2"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['País']: [-C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> access:['geometry']]\naccess:['geometry']: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["access:['geometry']"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node15"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"]}}}}},{"nodeId":33,"description":{"expressions":["'geometry'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"]},"stack":["string"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['País']: [-C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> access:['geometry']]\naccess:['geometry']: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["access:['geometry']"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node15"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"]}}}}},{"nodeId":34,"description":{"expressions":["*(ref$heap[s]:pp@'dataframes-tests/guide-small.py':8:59)->'geometry'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"]},"stack":["pandas.Series*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['País']: [-C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> access:['geometry']]\naccess:['geometry']: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["access:['geometry']"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node15"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"]}}}}},{"nodeId":35,"description":{"expressions":["ref$heap[s]:pp@'dataframes-tests/guide-small.py':8:59"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['País']: [-C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node15"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node18"]}}}}},{"nodeId":36,"description":{"expressions":["*(df2)->'País'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"]},"stack":["pandas.Series*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['País']: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node15"]}}}}},{"nodeId":37,"description":{"expressions":["df2"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node14"]}}}}},{"nodeId":38,"description":{"expressions":["'País'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"]},"stack":["string"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node14"]}}}}},{"nodeId":39,"description":{"expressions":["'nominatim'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"]},"stack":["string"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['País']: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node15"]}}}}},{"nodeId":40,"description":{"expressions":["'nominatim'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"]},"stack":["string"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['País']: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node15"]}}}}},{"nodeId":41,"description":{"expressions":["'geometry'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"]},"stack":["string"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['País']: [-C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node2":["read('temporal.csv')"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node15"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node18"]}}}}},{"nodeId":42,"description":{"expressions":["*(df2)->'Latitude'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.Series*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: []\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node27"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":43,"description":{"expressions":["*(df2)->'Latitude'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.Series*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: []\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nLAMBDA(['geometry'], lambda [l] : l::y): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node26"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":44,"description":{"expressions":["df2"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['geometry']: [-C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nLAMBDA(['geometry'], lambda [l] : l::y): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node22"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":45,"description":{"expressions":["'Latitude'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["string"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['geometry']: [-C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nLAMBDA(['geometry'], lambda [l] : l::y): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node22"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":46,"description":{"expressions":["ref$heap[s]:pp@'dataframes-tests/guide-small.py':9:53"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['geometry']: [-C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nLAMBDA(['geometry'], lambda [l] : l::y): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node22"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":47,"description":{"expressions":["*(df2)->'geometry'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"]},"stack":["pandas.Series*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['geometry']: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node22"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"]}}}}},{"nodeId":48,"description":{"expressions":["df2"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: []\nproject:['geometry']: [-A-> assign_to:['geometry']]","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node21"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"]}}}}},{"nodeId":49,"description":{"expressions":["'geometry'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"]},"stack":["string"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: []\nproject:['geometry']: [-A-> assign_to:['geometry']]","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node21"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"]}}}}},{"nodeId":50,"description":{"expressions":["lambda [l] : l::y"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"]},"stack":["lambda"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['geometry']: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node22"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"]}}}}},{"nodeId":51,"description":{"expressions":[],"state":{"heap":"_|_","type":"_|_","value":{"constants":"_|_","graph":"_|_","operations":"_|_","pointers":"_|_"}}}},{"nodeId":52,"description":{"expressions":[],"state":{"heap":"_|_","type":"_|_","value":{"constants":"_|_","graph":"_|_","operations":"_|_","pointers":"_|_"}}}},{"nodeId":53,"description":{"expressions":[],"state":{"heap":"_|_","type":"_|_","value":{"constants":"_|_","graph":"_|_","operations":"_|_","pointers":"_|_"}}}},{"nodeId":54,"description":{"expressions":["*(df2)->'Longitude'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.Series*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: []\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node33"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":55,"description":{"expressions":["*(df2)->'Longitude'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.Series*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: []\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nLAMBDA(['geometry'], lambda [l] : l::x): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node32"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":56,"description":{"expressions":["df2"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['geometry']: [-C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nLAMBDA(['geometry'], lambda [l] : l::x): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node28"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":57,"description":{"expressions":["'Longitude'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["string"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['geometry']: [-C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nLAMBDA(['geometry'], lambda [l] : l::x): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node28"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":58,"description":{"expressions":["ref$heap[s]:pp@'dataframes-tests/guide-small.py':10:54"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['geometry']: [-C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nLAMBDA(['geometry'], lambda [l] : l::x): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node28"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":59,"description":{"expressions":["*(df2)->'geometry'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.Series*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['geometry']: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node28"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":60,"description":{"expressions":["df2"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: []\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node27"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":61,"description":{"expressions":["'geometry'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["string"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: []\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node27"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":62,"description":{"expressions":["lambda [l] : l::x"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["lambda"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['geometry']: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node3":["read('temporal.csv')"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node28"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":63,"description":{"expressions":[],"state":{"heap":"_|_","type":"_|_","value":{"constants":"_|_","graph":"_|_","operations":"_|_","pointers":"_|_"}}}},{"nodeId":64,"description":{"expressions":[],"state":{"heap":"_|_","type":"_|_","value":{"constants":"_|_","graph":"_|_","operations":"_|_","pointers":"_|_"}}}},{"nodeId":65,"description":{"expressions":[],"state":{"heap":"_|_","type":"_|_","value":{"constants":"_|_","graph":"_|_","operations":"_|_","pointers":"_|_"}}}},{"nodeId":66,"description":{"expressions":["*(ref$*(df2)->*(df2) < 5)->[] append 'cool-col'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":67,"description":{"expressions":["*(ref$*(df2)->*(df2) < 5)->[] append 'cool-col'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node37"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":68,"description":{"expressions":["df2"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: []\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node33"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":69,"description":{"expressions":["df2"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: []\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node33"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":70,"description":{"expressions":["*(df2) < 5"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":"_|_"},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node34"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":71,"description":{"expressions":["*(df2)->\"col2\""],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.Series*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node34"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":72,"description":{"expressions":["df2"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: []\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node33"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":73,"description":{"expressions":["\"col2\""],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["string"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: []\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node33"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":74,"description":{"expressions":["5"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["int32"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node34"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":75,"description":{"expressions":["[] append 'cool-col'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["List"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node34"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":76,"description":{"expressions":["'cool-col'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["string"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node34"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":77,"description":{"expressions":["100"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["int32"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: []\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node33"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":78,"description":{"expressions":["df3"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]","df3":"[heap[s]:pp@'dataframes-tests/guide-small.py':15:25]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"df3":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_rows]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_rows]\nconcat_rows: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":79,"description":{"expressions":["df3"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":"#TOP#"},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_rows]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_rows]\nconcat_rows: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":80,"description":{"expressions":["ref$new pandas.DataFrame"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_rows]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_rows]\nconcat_rows: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":81,"description":{"expressions":["pd"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":"#TOP#"},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":82,"description":{"expressions":["[] append df append df2"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["List"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":83,"description":{"expressions":["df"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":84,"description":{"expressions":["df2"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: []\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node4":["access:[[0, 0]:[10, 10]:]"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":85,"description":{"expressions":["df4"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]","df3":"[heap[s]:pp@'dataframes-tests/guide-small.py':15:25]","df4":"[heap[s]:pp@'dataframes-tests/guide-small.py':18:17]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"df3":["pandas.DataFrame*"],"df4":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_cols, -0-> concat_rows]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_cols, -1-> concat_rows]\nconcat_rows: []\nconcat_cols: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node41":["assign_to:['Mes']"],"node42":["assign_to:['Mes']"],"node43":["concat_cols"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["node43"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":86,"description":{"expressions":["df4"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]","df3":"[heap[s]:pp@'dataframes-tests/guide-small.py':15:25]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"df3":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":"#TOP#"},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_cols, -0-> concat_rows]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_cols, -1-> concat_rows]\nconcat_rows: []\nconcat_cols: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node41":["assign_to:['Mes']"],"node42":["assign_to:['Mes']"],"node43":["concat_cols"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["node43"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":87,"description":{"expressions":["ref$heap[s]:pp@'dataframes-tests/guide-small.py':18:17"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]","df3":"[heap[s]:pp@'dataframes-tests/guide-small.py':15:25]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"df3":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_cols, -0-> concat_rows]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_cols, -1-> concat_rows]\nconcat_rows: []\nconcat_cols: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node41":["assign_to:['Mes']"],"node42":["assign_to:['Mes']"],"node43":["concat_cols"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["node43"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":88,"description":{"expressions":["df"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]","df3":"[heap[s]:pp@'dataframes-tests/guide-small.py':15:25]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"df3":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_rows]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_rows]\nconcat_rows: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":89,"description":{"expressions":["df2"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]","df3":"[heap[s]:pp@'dataframes-tests/guide-small.py':15:25]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"df3":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_rows]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_rows]\nconcat_rows: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":90,"description":{"expressions":["df5"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]","df3":"[heap[s]:pp@'dataframes-tests/guide-small.py':15:25]","df4":"[heap[s]:pp@'dataframes-tests/guide-small.py':18:17]","df5":"[heap[s]:pp@'dataframes-tests/guide-small.py':21:38]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"df3":["pandas.DataFrame*"],"df4":["pandas.DataFrame*"],"df5":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':21:38":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_cols, -0-> concat_rows, -> project:['bar']]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_cols, -1-> concat_rows]\nconcat_rows: []\nconcat_cols: []\nproject:['bar']: [-1-> concat_rows, -> project:['foo']]\nproject:['foo']: [-0-> concat_rows]\nconcat_rows: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node41":["assign_to:['Mes']"],"node42":["assign_to:['Mes']"],"node43":["concat_cols"],"node44":["project:['bar']"],"node45":["project:['foo']"],"node46":["concat_rows"],"node47":["concat_rows"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["node43"],"heap[s]:pp@'dataframes-tests/guide-small.py':21:38":["node47"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node45"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":91,"description":{"expressions":["df5"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]","df3":"[heap[s]:pp@'dataframes-tests/guide-small.py':15:25]","df4":"[heap[s]:pp@'dataframes-tests/guide-small.py':18:17]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"df3":["pandas.DataFrame*"],"df4":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':21:38":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":"#TOP#"},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_cols, -0-> concat_rows, -> project:['bar']]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_cols, -1-> concat_rows]\nconcat_rows: []\nconcat_cols: []\nproject:['bar']: [-1-> concat_rows, -> project:['foo']]\nproject:['foo']: [-0-> concat_rows]\nconcat_rows: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node41":["assign_to:['Mes']"],"node42":["assign_to:['Mes']"],"node43":["concat_cols"],"node44":["project:['bar']"],"node45":["project:['foo']"],"node46":["concat_rows"],"node47":["concat_rows"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["node43"],"heap[s]:pp@'dataframes-tests/guide-small.py':21:38":["node47"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node45"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":92,"description":{"expressions":["ref$new pandas.DataFrame"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]","df3":"[heap[s]:pp@'dataframes-tests/guide-small.py':15:25]","df4":"[heap[s]:pp@'dataframes-tests/guide-small.py':18:17]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"df3":["pandas.DataFrame*"],"df4":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':21:38":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_cols, -0-> concat_rows, -> project:['bar']]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_cols, -1-> concat_rows]\nconcat_rows: []\nconcat_cols: []\nproject:['bar']: [-1-> concat_rows, -> project:['foo']]\nproject:['foo']: [-0-> concat_rows]\nconcat_rows: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node41":["assign_to:['Mes']"],"node42":["assign_to:['Mes']"],"node43":["concat_cols"],"node44":["project:['bar']"],"node45":["project:['foo']"],"node46":["concat_rows"],"node47":["concat_rows"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["node43"],"heap[s]:pp@'dataframes-tests/guide-small.py':21:38":["node47"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node45"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":93,"description":{"expressions":["pd"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]","df3":"[heap[s]:pp@'dataframes-tests/guide-small.py':15:25]","df4":"[heap[s]:pp@'dataframes-tests/guide-small.py':18:17]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"df3":["pandas.DataFrame*"],"df4":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":"#TOP#"},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_cols, -0-> concat_rows]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_cols, -1-> concat_rows]\nconcat_rows: []\nconcat_cols: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node41":["assign_to:['Mes']"],"node42":["assign_to:['Mes']"],"node43":["concat_cols"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["node43"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":94,"description":{"expressions":["[] append *(df)->'bar' append *(df)->'foo'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]","df3":"[heap[s]:pp@'dataframes-tests/guide-small.py':15:25]","df4":"[heap[s]:pp@'dataframes-tests/guide-small.py':18:17]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"df3":["pandas.DataFrame*"],"df4":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["List"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_cols, -0-> concat_rows, -> access:['bar']]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_cols, -1-> concat_rows]\nconcat_rows: []\nconcat_cols: []\naccess:['bar']: [-> access:['foo']]\naccess:['foo']: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node41":["assign_to:['Mes']"],"node42":["assign_to:['Mes']"],"node43":["concat_cols"],"node44":["access:['bar']"],"node45":["access:['foo']"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["node43"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node45"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":95,"description":{"expressions":["*(df)->'bar'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]","df3":"[heap[s]:pp@'dataframes-tests/guide-small.py':15:25]","df4":"[heap[s]:pp@'dataframes-tests/guide-small.py':18:17]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"df3":["pandas.DataFrame*"],"df4":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.Series*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_cols, -0-> concat_rows, -> access:['bar']]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_cols, -1-> concat_rows]\nconcat_rows: []\nconcat_cols: []\naccess:['bar']: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node41":["assign_to:['Mes']"],"node42":["assign_to:['Mes']"],"node43":["concat_cols"],"node44":["access:['bar']"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["node43"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node44"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":96,"description":{"expressions":["df"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]","df3":"[heap[s]:pp@'dataframes-tests/guide-small.py':15:25]","df4":"[heap[s]:pp@'dataframes-tests/guide-small.py':18:17]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"df3":["pandas.DataFrame*"],"df4":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_cols, -0-> concat_rows]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_cols, -1-> concat_rows]\nconcat_rows: []\nconcat_cols: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node41":["assign_to:['Mes']"],"node42":["assign_to:['Mes']"],"node43":["concat_cols"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["node43"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":97,"description":{"expressions":["'bar'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]","df3":"[heap[s]:pp@'dataframes-tests/guide-small.py':15:25]","df4":"[heap[s]:pp@'dataframes-tests/guide-small.py':18:17]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"df3":["pandas.DataFrame*"],"df4":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["string"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_cols, -0-> concat_rows]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_cols, -1-> concat_rows]\nconcat_rows: []\nconcat_cols: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node41":["assign_to:['Mes']"],"node42":["assign_to:['Mes']"],"node43":["concat_cols"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["node43"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node11"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":98,"description":{"expressions":["*(df)->'foo'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]","df3":"[heap[s]:pp@'dataframes-tests/guide-small.py':15:25]","df4":"[heap[s]:pp@'dataframes-tests/guide-small.py':18:17]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"df3":["pandas.DataFrame*"],"df4":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.Series*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_cols, -0-> concat_rows, -> access:['bar']]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_cols, -1-> concat_rows]\nconcat_rows: []\nconcat_cols: []\naccess:['bar']: [-> access:['foo']]\naccess:['foo']: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node41":["assign_to:['Mes']"],"node42":["assign_to:['Mes']"],"node43":["concat_cols"],"node44":["access:['bar']"],"node45":["access:['foo']"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["node43"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node45"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":99,"description":{"expressions":["df"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]","df3":"[heap[s]:pp@'dataframes-tests/guide-small.py':15:25]","df4":"[heap[s]:pp@'dataframes-tests/guide-small.py':18:17]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"df3":["pandas.DataFrame*"],"df4":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["pandas.DataFrame*"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_cols, -0-> concat_rows, -> access:['bar']]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_cols, -1-> concat_rows]\nconcat_rows: []\nconcat_cols: []\naccess:['bar']: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node41":["assign_to:['Mes']"],"node42":["assign_to:['Mes']"],"node43":["concat_cols"],"node44":["access:['bar']"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["node43"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node44"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":100,"description":{"expressions":["'foo'"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]","df3":"[heap[s]:pp@'dataframes-tests/guide-small.py':15:25]","df4":"[heap[s]:pp@'dataframes-tests/guide-small.py':18:17]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"df3":["pandas.DataFrame*"],"df4":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":["string"]},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_cols, -0-> concat_rows, -> access:['bar']]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_cols, -1-> concat_rows]\nconcat_rows: []\nconcat_cols: []\naccess:['bar']: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node41":["assign_to:['Mes']"],"node42":["assign_to:['Mes']"],"node43":["concat_cols"],"node44":["access:['bar']"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["node43"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node44"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}},{"nodeId":101,"description":{"expressions":["skip"],"state":{"heap":{"df":"[heap[s]:pp@'dataframes-tests/guide-small.py':2:31]","df2":"[heap[s]:pp@'dataframes-tests/guide-small.py':6:28]","df3":"[heap[s]:pp@'dataframes-tests/guide-small.py':15:25]","df4":"[heap[s]:pp@'dataframes-tests/guide-small.py':18:17]","df5":"[heap[s]:pp@'dataframes-tests/guide-small.py':21:38]"},"type":{"map":{"df":["pandas.DataFrame*"],"df2":["pandas.DataFrame*"],"df3":["pandas.DataFrame*"],"df4":["pandas.DataFrame*"],"df5":["pandas.DataFrame*"],"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':21:38":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["pandas.DataFrame"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["pandas.DataFrame"]},"stack":"_|_"},"value":{"constants":"#TOP#","graph":"*read('temporal.csv'): [-> access:[[0, 0]:[10, 10]:], -> project:[[0, 0]:[10, 10]:]]\naccess:[[0, 0]:[10, 10]:]: [-> access:['Mes']]\nproject:[[0, 0]:[10, 10]:]: []\naccess:['Mes']: [-C-> assign_to:['Mes']]\naccess:['Mes']: [-> access:['Mes'], -C-> TO_DATETIME(['Mes'])]\nassign_to:['Mes']: [-0-> concat_cols, -0-> concat_rows, -> project:['bar']]\nTO_DATETIME(['Mes']): [-A-> assign_to:['Mes']]\n*read('mapa.csv'): [-> filter_null(ROWS)]\nfilter_null(ROWS): [-> access:['País']]\naccess:['geometry']: [-C-> assign_to:['geometry']]\naccess:['País']: [-> access:['geometry'], -C-> TO_GEOCODE(['País'])]\nTO_GEOCODE(['País']): [-> project:['geometry']]\nassign_to:['geometry']: [-> access:['geometry']]\nproject:['geometry']: [-A-> assign_to:['geometry']]\naccess:['Latitude']: [-C-> assign_to:['Latitude']]\naccess:['geometry']: [-> access:['Latitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::y)]\nassign_to:['Latitude']: [-> access:['geometry']]\nLAMBDA(['geometry'], lambda [l] : l::y): [-A-> assign_to:['Latitude']]\naccess:['Longitude']: [-C-> assign_to:['Longitude']]\naccess:['geometry']: [-> access:['Longitude'], -C-> LAMBDA(['geometry'], lambda [l] : l::x)]\nassign_to:['Longitude']: [-> access:[\"col2\"]]\nLAMBDA(['geometry'], lambda [l] : l::x): [-A-> assign_to:['Longitude']]\naccess:[\"col2\"]: [-C-> [\"col2\"] < 5]\n[\"col2\"] < 5: [-C-> access:{[\"col2\"] < 5, ['cool-col']}]\naccess:{[\"col2\"] < 5, ['cool-col']}: [-C-> assign({[\"col2\"] < 5, ['cool-col']}, 100)]\nassign({[\"col2\"] < 5, ['cool-col']}, 100): [-1-> concat_cols, -1-> concat_rows]\nconcat_rows: []\nconcat_cols: []\nproject:['bar']: [-1-> concat_rows, -> project:['foo']]\nproject:['foo']: [-0-> concat_rows]\nconcat_rows: []","operations":{"node0":["read('temporal.csv')"],"node1":["read('temporal.csv')"],"node10":["access:['Mes']"],"node11":["assign_to:['Mes']"],"node12":["read('mapa.csv')"],"node13":["read('mapa.csv')"],"node14":["filter_null(ROWS)"],"node15":["access:['País']"],"node16":["access:['País']"],"node17":["access:['País']"],"node18":["TO_GEOCODE(['País'])"],"node19":["project:['geometry']"],"node2":["read('temporal.csv')"],"node20":["access:['geometry']"],"node21":["assign_to:['geometry']"],"node22":["access:['geometry']"],"node23":["access:['geometry']"],"node24":["access:['geometry']"],"node25":["LAMBDA(['geometry'], lambda [l] : l::y)"],"node26":["access:['Latitude']"],"node27":["assign_to:['Latitude']"],"node28":["access:['geometry']"],"node29":["access:['geometry']"],"node3":["read('temporal.csv')"],"node30":["access:['geometry']"],"node31":["LAMBDA(['geometry'], lambda [l] : l::x)"],"node32":["access:['Longitude']"],"node33":["assign_to:['Longitude']"],"node34":["access:[\"col2\"]"],"node35":["[\"col2\"] < 5"],"node36":["[\"col2\"] < 5"],"node37":["access:{[\"col2\"] < 5, ['cool-col']}"],"node38":["assign({[\"col2\"] < 5, ['cool-col']}, 100)"],"node39":["concat_rows"],"node4":["access:[[0, 0]:[10, 10]:]"],"node40":["concat_rows"],"node41":["assign_to:['Mes']"],"node42":["assign_to:['Mes']"],"node43":["concat_cols"],"node44":["project:['bar']"],"node45":["project:['foo']"],"node46":["concat_rows"],"node47":["concat_rows"],"node5":["project:[[0, 0]:[10, 10]:]"],"node6":["access:['Mes']"],"node7":["access:['Mes']"],"node8":["access:['Mes']"],"node9":["TO_DATETIME(['Mes'])"]},"pointers":{"heap[s]:pp@'dataframes-tests/guide-small.py':10:54":["node31"],"heap[s]:pp@'dataframes-tests/guide-small.py':15:25":["node40"],"heap[s]:pp@'dataframes-tests/guide-small.py':18:17":["node43"],"heap[s]:pp@'dataframes-tests/guide-small.py':21:38":["node47"],"heap[s]:pp@'dataframes-tests/guide-small.py':2:31":["node45"],"heap[s]:pp@'dataframes-tests/guide-small.py':3:10":["node5"],"heap[s]:pp@'dataframes-tests/guide-small.py':4:36":["node9"],"heap[s]:pp@'dataframes-tests/guide-small.py':6:28":["node38"],"heap[s]:pp@'dataframes-tests/guide-small.py':8:59":["node19"],"heap[s]:pp@'dataframes-tests/guide-small.py':9:53":["node25"]}}}}}]}
digraph {
	"node0" [shape="rect",color="black",label=<import pandas as pd<BR/>{{<BR/>heap [[ #TOP# ]]<BR/>value [[ #TOP# ]]<BR/>}} -&gt; [skip]>];
	"node1" [shape="rect",color="gray",label=<df3 = concat(pd, list(df, df2))<BR/>{{<BR/>heap [[ df: [heap[s]:pp@'dataframes-tests/guide-small.py':2:31]<BR/>df2: [heap[s]:pp@'dataframes-tests/guide-small.py':6:28]<BR/>df3: [heap[s]:pp@'dataframes-tests/guide-small.py':15:25] ]]<BR/>value [[ heap[s]:pp@'dataframes-tests/guide-small.py':10:54: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::x): []<BR/>LAMBDA(['geometry'], lambda [l] : l::y): [-A-&gt; assign_to:['Latitude']]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign_to:['Latitude']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::x)]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y), -&gt; assign_to:['Latitude']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':15:25: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>*read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>LAMBDA(['geometry'], lambda [l] : l::x): [-A-&gt; assign_to:['Longitude']]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): [-A-&gt; assign_to:['Latitude']]<BR/>TO_DATETIME(['Mes']): [-A-&gt; assign_to:['Mes']]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100): [-1-&gt; concat_rows]<BR/>assign_to:['Latitude']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::x), -&gt; assign_to:['Longitude']]<BR/>assign_to:['Longitude']: [-&gt; assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100)]<BR/>assign_to:['Mes']: [-0-&gt; concat_rows]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y), -&gt; assign_to:['Latitude']]<BR/>concat_rows: []<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes']), -&gt; assign_to:['Mes']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':2:31: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): [-A-&gt; assign_to:['Mes']]<BR/>assign_to:['Mes']: []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes']), -&gt; assign_to:['Mes']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':3:10: *read('temporal.csv'): [-&gt; project:[[0, 0]:[10, 10]:]]<BR/>project:[[0, 0]:[10, 10]:]: []<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':4:36: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes'])]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':6:28: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::x): [-A-&gt; assign_to:['Longitude']]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): [-A-&gt; assign_to:['Latitude']]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100): []<BR/>assign_to:['Latitude']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::x), -&gt; assign_to:['Longitude']]<BR/>assign_to:['Longitude']: [-&gt; assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100)]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y), -&gt; assign_to:['Latitude']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':8:59: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s'])]<BR/>project:['geometry']: []<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':9:53: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): []<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y)]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>[stack: _|_] ]]<BR/>}} -&gt; [df3]>];
	"node2" [shape="rect",color="gray",label=<df2 = read_csv(pd, 'mapa.csv')<BR/>{{<BR/>heap [[ df: [heap[s]:pp@'dataframes-tests/guide-small.py':2:31]<BR/>df2: [heap[s]:pp@'dataframes-tests/guide-small.py':6:28] ]]<BR/>value [[ heap[s]:pp@'dataframes-tests/guide-small.py':2:31: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): [-A-&gt; assign_to:['Mes']]<BR/>assign_to:['Mes']: []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes']), -&gt; assign_to:['Mes']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':3:10: *read('temporal.csv'): [-&gt; project:[[0, 0]:[10, 10]:]]<BR/>project:[[0, 0]:[10, 10]:]: []<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':4:36: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes'])]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':6:28: *read('mapa.csv'): []<BR/>[stack: _|_] ]]<BR/>}} -&gt; [df2]>];
	"node3" [shape="rect",color="gray",label=<from geopandas.tools import geopandas.tools as geocode<BR/>{{<BR/>heap [[ df: [heap[s]:pp@'dataframes-tests/guide-small.py':2:31] ]]<BR/>value [[ heap[s]:pp@'dataframes-tests/guide-small.py':2:31: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): [-A-&gt; assign_to:['Mes']]<BR/>assign_to:['Mes']: []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes']), -&gt; assign_to:['Mes']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':3:10: *read('temporal.csv'): [-&gt; project:[[0, 0]:[10, 10]:]]<BR/>project:[[0, 0]:[10, 10]:]: []<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':4:36: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes'])]<BR/>[stack: _|_] ]]<BR/>}} -&gt; [skip]>];
	"node4" [shape="rect",color="gray",label=<[](df2, 'Latitude') = apply([](df2, 'geometry'), lambda [l] : l::y)<BR/>{{<BR/>heap [[ df: [heap[s]:pp@'dataframes-tests/guide-small.py':2:31]<BR/>df2: [heap[s]:pp@'dataframes-tests/guide-small.py':6:28] ]]<BR/>value [[ heap[s]:pp@'dataframes-tests/guide-small.py':2:31: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): [-A-&gt; assign_to:['Mes']]<BR/>assign_to:['Mes']: []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes']), -&gt; assign_to:['Mes']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':3:10: *read('temporal.csv'): [-&gt; project:[[0, 0]:[10, 10]:]]<BR/>project:[[0, 0]:[10, 10]:]: []<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':4:36: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes'])]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':6:28: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): [-A-&gt; assign_to:['Latitude']]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign_to:['Latitude']: []<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y), -&gt; assign_to:['Latitude']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':8:59: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s'])]<BR/>project:['geometry']: []<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':9:53: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): []<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y)]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>[stack: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): [-A-&gt; assign_to:['Latitude']]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign_to:['Latitude']: []<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y), -&gt; assign_to:['Latitude']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]] ]]<BR/>}} -&gt; [*(df2) write ref$heap[s]:pp@'dataframes-tests/guide-small.py':9:53]>];
	"node5" [shape="rect",color="gray",label=<df4 = join(df, df2)<BR/>{{<BR/>heap [[ df: [heap[s]:pp@'dataframes-tests/guide-small.py':2:31]<BR/>df2: [heap[s]:pp@'dataframes-tests/guide-small.py':6:28]<BR/>df3: [heap[s]:pp@'dataframes-tests/guide-small.py':15:25]<BR/>df4: [heap[s]:pp@'dataframes-tests/guide-small.py':18:17] ]]<BR/>value [[ heap[s]:pp@'dataframes-tests/guide-small.py':10:54: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::x): []<BR/>LAMBDA(['geometry'], lambda [l] : l::y): [-A-&gt; assign_to:['Latitude']]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign_to:['Latitude']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::x)]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y), -&gt; assign_to:['Latitude']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':15:25: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>*read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>LAMBDA(['geometry'], lambda [l] : l::x): [-A-&gt; assign_to:['Longitude']]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): [-A-&gt; assign_to:['Latitude']]<BR/>TO_DATETIME(['Mes']): [-A-&gt; assign_to:['Mes']]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100): [-1-&gt; concat_rows]<BR/>assign_to:['Latitude']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::x), -&gt; assign_to:['Longitude']]<BR/>assign_to:['Longitude']: [-&gt; assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100)]<BR/>assign_to:['Mes']: [-0-&gt; concat_rows]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y), -&gt; assign_to:['Latitude']]<BR/>concat_rows: []<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes']), -&gt; assign_to:['Mes']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':18:17: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>*read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>LAMBDA(['geometry'], lambda [l] : l::x): [-A-&gt; assign_to:['Longitude']]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): [-A-&gt; assign_to:['Latitude']]<BR/>TO_DATETIME(['Mes']): [-A-&gt; assign_to:['Mes']]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100): [-1-&gt; concat_cols]<BR/>assign_to:['Latitude']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::x), -&gt; assign_to:['Longitude']]<BR/>assign_to:['Longitude']: [-&gt; assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100)]<BR/>assign_to:['Mes']: [-0-&gt; concat_cols]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y), -&gt; assign_to:['Latitude']]<BR/>concat_cols: []<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes']), -&gt; assign_to:['Mes']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':2:31: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): [-A-&gt; assign_to:['Mes']]<BR/>assign_to:['Mes']: []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes']), -&gt; assign_to:['Mes']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':3:10: *read('temporal.csv'): [-&gt; project:[[0, 0]:[10, 10]:]]<BR/>project:[[0, 0]:[10, 10]:]: []<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':4:36: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes'])]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':6:28: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::x): [-A-&gt; assign_to:['Longitude']]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): [-A-&gt; assign_to:['Latitude']]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100): []<BR/>assign_to:['Latitude']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::x), -&gt; assign_to:['Longitude']]<BR/>assign_to:['Longitude']: [-&gt; assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100)]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y), -&gt; assign_to:['Latitude']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':8:59: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s'])]<BR/>project:['geometry']: []<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':9:53: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): []<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y)]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>[stack: _|_] ]]<BR/>}} -&gt; [df4]>];
	"node6" [shape="rect",color="gray",label=<head(df, 10)<BR/>{{<BR/>heap [[ df: [heap[s]:pp@'dataframes-tests/guide-small.py':2:31] ]]<BR/>value [[ heap[s]:pp@'dataframes-tests/guide-small.py':2:31: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>select:[[0, 0]:[10, 10]:]: []<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':3:10: *read('temporal.csv'): [-&gt; project:[[0, 0]:[10, 10]:]]<BR/>project:[[0, 0]:[10, 10]:]: []<BR/>[stack: *read('temporal.csv'): [-&gt; project:[[0, 0]:[10, 10]:]]<BR/>project:[[0, 0]:[10, 10]:]: []] ]]<BR/>}} -&gt; [ref$heap[s]:pp@'dataframes-tests/guide-small.py':3:10]>];
	"node7" [shape="rect",color="gray",label=<[](df2, 'geometry') = [](geocode([](df2, 'Pa&iacute;s'), provider=('nominatim')), 'geometry')<BR/>{{<BR/>heap [[ df: [heap[s]:pp@'dataframes-tests/guide-small.py':2:31]<BR/>df2: [heap[s]:pp@'dataframes-tests/guide-small.py':6:28] ]]<BR/>value [[ heap[s]:pp@'dataframes-tests/guide-small.py':2:31: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): [-A-&gt; assign_to:['Mes']]<BR/>assign_to:['Mes']: []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes']), -&gt; assign_to:['Mes']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':3:10: *read('temporal.csv'): [-&gt; project:[[0, 0]:[10, 10]:]]<BR/>project:[[0, 0]:[10, 10]:]: []<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':4:36: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes'])]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':6:28: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign_to:['geometry']: []<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':8:59: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s'])]<BR/>project:['geometry']: []<BR/>[stack: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign_to:['geometry']: []<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]] ]]<BR/>}} -&gt; [*(df2) write *(ref$new pandas.DataFrame)]>];
	"node8" [shape="rect",color="gray",label=<[](df2::loc, &lt;([](df2, &quot;col2&quot;), 5), list('cool-col')) = 100<BR/>{{<BR/>heap [[ df: [heap[s]:pp@'dataframes-tests/guide-small.py':2:31]<BR/>df2: [heap[s]:pp@'dataframes-tests/guide-small.py':6:28] ]]<BR/>value [[ heap[s]:pp@'dataframes-tests/guide-small.py':10:54: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::x): []<BR/>LAMBDA(['geometry'], lambda [l] : l::y): [-A-&gt; assign_to:['Latitude']]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign_to:['Latitude']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::x)]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y), -&gt; assign_to:['Latitude']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':2:31: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): [-A-&gt; assign_to:['Mes']]<BR/>assign_to:['Mes']: []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes']), -&gt; assign_to:['Mes']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':3:10: *read('temporal.csv'): [-&gt; project:[[0, 0]:[10, 10]:]]<BR/>project:[[0, 0]:[10, 10]:]: []<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':4:36: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes'])]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':6:28: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::x): [-A-&gt; assign_to:['Longitude']]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): [-A-&gt; assign_to:['Latitude']]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100): []<BR/>assign_to:['Latitude']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::x), -&gt; assign_to:['Longitude']]<BR/>assign_to:['Longitude']: [-&gt; assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100)]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y), -&gt; assign_to:['Latitude']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':8:59: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s'])]<BR/>project:['geometry']: []<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':9:53: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): []<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y)]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>[stack: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::x): [-A-&gt; assign_to:['Longitude']]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): [-A-&gt; assign_to:['Latitude']]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100): []<BR/>assign_to:['Latitude']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::x), -&gt; assign_to:['Longitude']]<BR/>assign_to:['Longitude']: [-&gt; assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100)]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y), -&gt; assign_to:['Latitude']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]] ]]<BR/>}} -&gt; [*(df2) write_selection-&gt; 100]>];
	"node9" [shape="rect",color="gray",label=<[](df2, 'Longitude') = apply([](df2, 'geometry'), lambda [l] : l::x)<BR/>{{<BR/>heap [[ df: [heap[s]:pp@'dataframes-tests/guide-small.py':2:31]<BR/>df2: [heap[s]:pp@'dataframes-tests/guide-small.py':6:28] ]]<BR/>value [[ heap[s]:pp@'dataframes-tests/guide-small.py':10:54: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::x): []<BR/>LAMBDA(['geometry'], lambda [l] : l::y): [-A-&gt; assign_to:['Latitude']]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign_to:['Latitude']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::x)]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y), -&gt; assign_to:['Latitude']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':2:31: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): [-A-&gt; assign_to:['Mes']]<BR/>assign_to:['Mes']: []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes']), -&gt; assign_to:['Mes']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':3:10: *read('temporal.csv'): [-&gt; project:[[0, 0]:[10, 10]:]]<BR/>project:[[0, 0]:[10, 10]:]: []<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':4:36: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes'])]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':6:28: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::x): [-A-&gt; assign_to:['Longitude']]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): [-A-&gt; assign_to:['Latitude']]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign_to:['Latitude']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::x), -&gt; assign_to:['Longitude']]<BR/>assign_to:['Longitude']: []<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y), -&gt; assign_to:['Latitude']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':8:59: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s'])]<BR/>project:['geometry']: []<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':9:53: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): []<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y)]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>[stack: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::x): [-A-&gt; assign_to:['Longitude']]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): [-A-&gt; assign_to:['Latitude']]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign_to:['Latitude']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::x), -&gt; assign_to:['Longitude']]<BR/>assign_to:['Longitude']: []<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y), -&gt; assign_to:['Latitude']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]] ]]<BR/>}} -&gt; [*(df2) write ref$heap[s]:pp@'dataframes-tests/guide-small.py':10:54]>];
	"node10" [shape="rect",color="gray",label=<df = read_csv(pd, 'temporal.csv')<BR/>{{<BR/>heap [[ df: [heap[s]:pp@'dataframes-tests/guide-small.py':2:31] ]]<BR/>value [[ heap[s]:pp@'dataframes-tests/guide-small.py':2:31: *read('temporal.csv'): []<BR/>[stack: _|_] ]]<BR/>}} -&gt; [df]>];
	"node11" [shape="rect",color="black",peripheries="2",label=<ret<BR/>{{<BR/>heap [[ df: [heap[s]:pp@'dataframes-tests/guide-small.py':2:31]<BR/>df2: [heap[s]:pp@'dataframes-tests/guide-small.py':6:28]<BR/>df3: [heap[s]:pp@'dataframes-tests/guide-small.py':15:25]<BR/>df4: [heap[s]:pp@'dataframes-tests/guide-small.py':18:17] ]]<BR/>value [[ heap[s]:pp@'dataframes-tests/guide-small.py':10:54: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::x): []<BR/>LAMBDA(['geometry'], lambda [l] : l::y): [-A-&gt; assign_to:['Latitude']]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign_to:['Latitude']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::x)]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y), -&gt; assign_to:['Latitude']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':15:25: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>*read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>LAMBDA(['geometry'], lambda [l] : l::x): [-A-&gt; assign_to:['Longitude']]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): [-A-&gt; assign_to:['Latitude']]<BR/>TO_DATETIME(['Mes']): [-A-&gt; assign_to:['Mes']]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100): [-1-&gt; concat_rows]<BR/>assign_to:['Latitude']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::x), -&gt; assign_to:['Longitude']]<BR/>assign_to:['Longitude']: [-&gt; assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100)]<BR/>assign_to:['Mes']: [-0-&gt; concat_rows]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y), -&gt; assign_to:['Latitude']]<BR/>concat_rows: []<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes']), -&gt; assign_to:['Mes']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':18:17: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>*read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>LAMBDA(['geometry'], lambda [l] : l::x): [-A-&gt; assign_to:['Longitude']]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): [-A-&gt; assign_to:['Latitude']]<BR/>TO_DATETIME(['Mes']): [-A-&gt; assign_to:['Mes']]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100): [-1-&gt; concat_cols]<BR/>assign_to:['Latitude']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::x), -&gt; assign_to:['Longitude']]<BR/>assign_to:['Longitude']: [-&gt; assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100)]<BR/>assign_to:['Mes']: [-0-&gt; concat_cols]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y), -&gt; assign_to:['Latitude']]<BR/>concat_cols: []<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes']), -&gt; assign_to:['Mes']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':2:31: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): [-A-&gt; assign_to:['Mes']]<BR/>assign_to:['Mes']: []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes']), -&gt; assign_to:['Mes']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':3:10: *read('temporal.csv'): [-&gt; project:[[0, 0]:[10, 10]:]]<BR/>project:[[0, 0]:[10, 10]:]: []<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':4:36: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes'])]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':6:28: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::x): [-A-&gt; assign_to:['Longitude']]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): [-A-&gt; assign_to:['Latitude']]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100): []<BR/>assign_to:['Latitude']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::x), -&gt; assign_to:['Longitude']]<BR/>assign_to:['Longitude']: [-&gt; assign({'[&quot;col2&quot;]' &lt; 5, ['cool-col']}, 100)]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y), -&gt; assign_to:['Latitude']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':8:59: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s'])]<BR/>project:['geometry']: []<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':9:53: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>LAMBDA(['geometry'], lambda [l] : l::y): []<BR/>TO_GEOCODE(['Pa&iacute;s']): [-&gt; project:['geometry']]<BR/>assign_to:['geometry']: [-&gt; LAMBDA(['geometry'], lambda [l] : l::y)]<BR/>filter_null(ROWS): [-&gt; TO_GEOCODE(['Pa&iacute;s']), -&gt; assign_to:['geometry']]<BR/>project:['geometry']: [-A-&gt; assign_to:['geometry']]<BR/>[stack: _|_] ]]<BR/>}} -&gt; [skip]>];
	"node12" [shape="rect",color="gray",label=<[](df, 'Mes') = to_datetime(pd, [](df, 'Mes'))<BR/>{{<BR/>heap [[ df: [heap[s]:pp@'dataframes-tests/guide-small.py':2:31] ]]<BR/>value [[ heap[s]:pp@'dataframes-tests/guide-small.py':2:31: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): [-A-&gt; assign_to:['Mes']]<BR/>assign_to:['Mes']: []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes']), -&gt; assign_to:['Mes']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':3:10: *read('temporal.csv'): [-&gt; project:[[0, 0]:[10, 10]:]]<BR/>project:[[0, 0]:[10, 10]:]: []<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':4:36: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes'])]<BR/>[stack: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): [-A-&gt; assign_to:['Mes']]<BR/>assign_to:['Mes']: []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes']), -&gt; assign_to:['Mes']]] ]]<BR/>}} -&gt; [*(df) write ref$heap[s]:pp@'dataframes-tests/guide-small.py':4:36]>];
	"node13" [shape="rect",color="gray",label=<dropna(df2, axis=(0), inplace=(true))<BR/>{{<BR/>heap [[ df: [heap[s]:pp@'dataframes-tests/guide-small.py':2:31]<BR/>df2: [heap[s]:pp@'dataframes-tests/guide-small.py':6:28] ]]<BR/>value [[ heap[s]:pp@'dataframes-tests/guide-small.py':2:31: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): [-A-&gt; assign_to:['Mes']]<BR/>assign_to:['Mes']: []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes']), -&gt; assign_to:['Mes']]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':3:10: *read('temporal.csv'): [-&gt; project:[[0, 0]:[10, 10]:]]<BR/>project:[[0, 0]:[10, 10]:]: []<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':4:36: *read('temporal.csv'): [-&gt; select:[[0, 0]:[10, 10]:]]<BR/>TO_DATETIME(['Mes']): []<BR/>select:[[0, 0]:[10, 10]:]: [-&gt; TO_DATETIME(['Mes'])]<BR/>heap[s]:pp@'dataframes-tests/guide-small.py':6:28: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>filter_null(ROWS): []<BR/>[stack: *read('mapa.csv'): [-&gt; filter_null(ROWS)]<BR/>filter_null(ROWS): []] ]]<BR/>}} -&gt; [ref$*(df2)]>];
	"node1" -> "node5" [color="black"];
	"node0" -> "node10" [color="black"];
	"node2" -> "node13" [color="black"];
	"node3" -> "node2" [color="black"];
	"node4" -> "node9" [color="black"];
	"node5" -> "node11" [color="black"];
	"node6" -> "node12" [color="black"];
	"node7" -> "node4" [color="black"];
	"node8" -> "node1" [color="black"];
	"node9" -> "node8" [color="black"];
	"node10" -> "node6" [color="black"];
	"node12" -> "node3" [color="black"];
	"node13" -> "node7" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
